// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowDemo.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Use of tables to provide data to step definitions")]
    public partial class UseOfTablesToProvideDataToStepDefinitionsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Employee.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Use of tables to provide data to step definitions", @"	EmployeeDetails class contains fields Name, Age, Phone and Email
	Scenario 1 creates single instance of EmployeeDetails using; EmployeeDetails employeeDetails = table.CreateInstance<EmployeeDetails>();
	Scenario 2 creates multiple instances of EmployeeDetails using; var employeeDetails = table.CreateSet<EmployeeDetails>();
	Scenario 3 use of Examples table in Scenario Outline creates a seperate test for each row of data", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1.Transfrom table row data into class")]
        public virtual void _1_TransfromTableRowDataIntoClass()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1.Transfrom table row data into class", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Age",
                        "Phone",
                        "Email"});
            table1.AddRow(new string[] {
                        "Steve McKinney",
                        "54",
                        "07807 359194",
                        "stevejmckinney@gmail.com"});
#line 8
 testRunner.Given("I pass a table to the step definition", ((string)(null)), table1, "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2.Transfrom table data with multiple rows")]
        public virtual void _2_TransfromTableDataWithMultipleRows()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2.Transfrom table data with multiple rows", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Age",
                        "Phone",
                        "Email"});
            table2.AddRow(new string[] {
                        "Steve McKinney",
                        "54",
                        "07807 359194",
                        "stevejmckinney@gmail.com"});
            table2.AddRow(new string[] {
                        "John McKinney",
                        "52",
                        "07807 123456",
                        "johnamckinney@gmail.com"});
            table2.AddRow(new string[] {
                        "Dick McKinney",
                        "48",
                        "07807 654321",
                        "richardwmckinney@gmail.com"});
#line 14
 testRunner.Given("I pass a multi-row table to the step definition", ((string)(null)), table2, "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("3.Provide data to step definition as Examples table")]
        [NUnit.Framework.TestCaseAttribute("Steve McKinney", "54", "07807 359194", "stevejmckinney@gmail.com", null)]
        [NUnit.Framework.TestCaseAttribute("John McKinney", "52", "07807 123456", "johnamckinney@gmail.com", null)]
        [NUnit.Framework.TestCaseAttribute("Dick McKinney", "48", "07807 654321", "richardwmckinney@gmail.com", null)]
        public virtual void _3_ProvideDataToStepDefinitionAsExamplesTable(string name, string age, string phone, string email, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3.Provide data to step definition as Examples table", exampleTags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given(string.Format("I pass {0}, {1}, {2} and {3} to the step definition", name, age, phone, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
